/*
 * AppFrame.java
 *
 * Created on April 29, 2005, 7:19 PM
 */

package myUISegment;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import com.sun.image.codec.jpeg.JPEGCodec;
import com.sun.image.codec.jpeg.JPEGEncodeParam;
import com.sun.image.codec.jpeg.JPEGImageEncoder;

/**
 * 
 * @author hysun
 */
public class AppFrame extends javax.swing.JFrame {

	public AppFrame() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	/*
	 * public void init() { setLayout(new BorderLayout()); Panel c = new
	 * Panel(); Panel s = new Panel(); Label l = new Label("JPEG Viewer",
	 * Label.CENTER); c.setBackground(Color.pink); c.add(BorderLayout.CENTER,
	 * l1); s.setLayout(new BorderLayout()); s.add(BorderLayout.EAST, b2);
	 * s.add(BorderLayout.CENTER, l); add(BorderLayout.CENTER, c);
	 * add(BorderLayout.SOUTH, s); b2.addActionListener((ActionListener) this);
	 * }
	 */
	private void initComponents() {// GEN-BEGIN:initComponents
		java.awt.GridBagConstraints gridBagConstraints;

		toolsGroup = new javax.swing.ButtonGroup();
		ctrlPanel = new javax.swing.JPanel();
		mediumPanel1 = new javax.swing.JPanel();
		toolsPanel = new javax.swing.JPanel();
		mediumPanel2 = new javax.swing.JPanel();
		pencilButton = new javax.swing.JToggleButton();
		saveButton = new javax.swing.JToggleButton();
		rectButton = new javax.swing.JToggleButton();
		clearButton = new javax.swing.JButton();
		colorPanel = new javax.swing.JPanel();
		fgButton = new javax.swing.JButton();
		bgButton = new javax.swing.JButton();
		sizePanel = new javax.swing.JPanel();
		mediumPanel3 = new javax.swing.JPanel();
		weightCombo = new javax.swing.JComboBox();
		copyleft = new javax.swing.JLabel();
		board = new DrawingBoard();
		readButton = new javax.swing.JToggleButton();
		new javax.swing.JLabel();
		new javax.swing.JPanel();
		jPanel = new ZPanel();
		scrollPane = new javax.swing.JScrollPane();
		new javax.swing.JTabbedPane();
		new javax.swing.JDesktopPane();
		new javax.swing.JScrollBar();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("自动分割转型啦");
		ctrlPanel.setLayout(new java.awt.GridBagLayout());

		mediumPanel1.setLayout(new javax.swing.BoxLayout(mediumPanel1,
				javax.swing.BoxLayout.Y_AXIS));

		toolsPanel.setBorder(new javax.swing.border.TitledBorder("选择类型"));
		mediumPanel2.setLayout(new java.awt.GridLayout(9, 1, 5, 5));

		toolsGroup.add(pencilButton);
		pencilButton.setFont(new java.awt.Font("Dialog", 0, 10));
		// pencilButton.setSelected(true);
		pencilButton.setText("画线");
		pencilButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				pencilButtonActionPerformed(evt);
			}
		});
		mediumPanel2.add(pencilButton);

		toolsGroup.add(rectButton);
		rectButton.setFont(new java.awt.Font("Dialog", 0, 10));
		rectButton.setText("矩形");
		rectButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				rectButtonActionPerformed(evt);
			}
		});
		mediumPanel2.add(rectButton);
		
		clearButton.setFont(new java.awt.Font("Dialog", 1, 10));
		clearButton.setText("清空");
		clearButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				clearButtonActionPerformed(evt);
			}
		});

		mediumPanel2.add(clearButton);

		toolsGroup.add(saveButton);
		saveButton.setFont(new java.awt.Font("save", 0, 10));
		saveButton.setText("保存");
		saveButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				saveFrom();
			}
		});

		mediumPanel2.add(saveButton);

		toolsGroup.add(readButton);
		readButton.setFont(new java.awt.Font("save", 0, 10));
		readButton.setText("打开");
		readButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				readFrom();
			}
		});

		mediumPanel2.add(readButton);

		toolsPanel.add(mediumPanel2);

		mediumPanel1.add(toolsPanel);

		colorPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 10));

        colorPanel.setBorder(new javax.swing.border.TitledBorder("Color Settings"));
        fgButton.setBackground(board.getForeground());
        fgButton.setToolTipText("Change Drawing Color");
        fgButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
        fgButton.setPreferredSize(new java.awt.Dimension(50, 50));
        fgButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fgButtonActionPerformed(evt);
            }
        });

        colorPanel.add(fgButton);

//        bgButton.setBackground(board.getBackground());
//        bgButton.setToolTipText("Change Board Background Color");
//        bgButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
//        bgButton.setPreferredSize(new java.awt.Dimension(50, 50));
//        bgButton.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                bgButtonActionPerformed(evt);
//            }
//        });
//
//        colorPanel.add(bgButton);

        mediumPanel1.add(colorPanel);

		sizePanel.setBorder(new javax.swing.border.TitledBorder("线条粗细"));
		mediumPanel3.setLayout(new java.awt.BorderLayout(0, 3));

		weightCombo.setFont(new java.awt.Font("Dialog", 0, 10));
		weightCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] {
				"Stroke Weight 1.0px", "Stroke Weight 2.0px",
		  "Stroke Weight 5.0px", "Stroke Weight 7.5px", "Stroke Weight 10.0px"
		 }));
		weightCombo.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				weightComboActionPerformed(evt);
			}
		});

		mediumPanel3.add(weightCombo, java.awt.BorderLayout.NORTH);


		sizePanel.add(mediumPanel3);

		mediumPanel1.add(sizePanel);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(10, 5, 5, 5);
		ctrlPanel.add(mediumPanel1, gridBagConstraints);

		copyleft.setFont(new java.awt.Font("Verdana", 0, 10));
		copyleft.setForeground(new java.awt.Color(255, 153, 0));
		copyleft.setText("CopyLeft 2005 hysun");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(5, 5, 15, 5);
		ctrlPanel.add(copyleft, gridBagConstraints);

		getContentPane().add(ctrlPanel, java.awt.BorderLayout.WEST);
		jPanel.setBackground(Color.WHITE);
		jPanel.add(board);
		getContentPane().add(board, java.awt.BorderLayout.CENTER);

		java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit()
				.getScreenSize();
		setBounds((screenSize.width - 786) / 2, (screenSize.height - 578) / 2,
				786, 578);
	}// GEN-END:initComponents

	private void fgButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_fgButtonActionPerformed
		java.awt.Color color = javax.swing.JColorChooser.showDialog(this,
				"Change Drawing Color", board.getForeground());
		if (color != null) {
			board.setForeground(color);
			fgButton.setBackground(color);
		}
	}// GEN-LAST:event_fgButtonActionPerformed

	private void bgButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_bgButtonActionPerformed
		java.awt.Color color = javax.swing.JColorChooser.showDialog(this,
				"Change Board Background Color", board.getBackground());
		if (color != null) {
			board.setBackground(color);
			bgButton.setBackground(color);
		}
	}// GEN-LAST:event_bgButtonActionPerformed


	private void weightComboActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_weightComboActionPerformed
		board.setStrokeIndex(weightCombo.getSelectedIndex());
	}// GEN-LAST:event_weightComboActionPerformed

	private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_clearButtonActionPerformed
		board.clearBoard();
	}// GEN-LAST:event_clearButtonActionPerformed

	private void pencilButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_pencilButtonActionPerformed
		board.setTool(DrawingBoard.TOOL_PENCIL);
	}// GEN-LAST:event_pencilButtonActionPerformed
	private void rectButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_rectButtonActionPerformed
		board.setTool(DrawingBoard.TOOL_RECT);
	}// GEN-LAST:event_rectButtonActionPerformed
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton bgButton;
	private DrawingBoard board;
	private javax.swing.JButton clearButton;
	private javax.swing.JPanel colorPanel;
	private javax.swing.JLabel copyleft;
	private javax.swing.JPanel ctrlPanel;
	public static javax.swing.JButton fgButton;
	private javax.swing.JPanel mediumPanel1;
	private javax.swing.JPanel mediumPanel2;
	private javax.swing.JPanel mediumPanel3;
	private javax.swing.JToggleButton pencilButton;
	private javax.swing.JToggleButton saveButton;
	private javax.swing.JPanel sizePanel;
	private javax.swing.ButtonGroup toolsGroup;
	private javax.swing.JPanel toolsPanel;
	private javax.swing.JComboBox weightCombo;
	private javax.swing.JToggleButton readButton;
	private ZPanel jPanel;
	private javax.swing.JScrollPane scrollPane;
	private javax.swing.JToggleButton rectButton;
	// End of variables declaration//GEN-END:variables
	// 保存图片的方法
	public static void saveComponentAsJPEG(Component component, File file) {
		Image capturedImage = component.createImage(component.getWidth(),
				component.getHeight());
		saveImageAsJPEG(capturedImage, file, component);
	}

	// 保存图片的方法
	public static void saveImageAsJPEG(Image capturedImage, File file,
			Component component) {
		FileOutputStream out = null;
		try {
			out = new FileOutputStream(file);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}

		Graphics captureG = capturedImage.getGraphics();
		component.paint(captureG);
		JPEGImageEncoder encoder = JPEGCodec.createJPEGEncoder(out);
		BufferedImage bufferedImage = (BufferedImage) capturedImage;
		JPEGEncodeParam param = encoder
				.getDefaultJPEGEncodeParam(bufferedImage);

		param.setQuality(1.0f, true);
		try {
			encoder.encode(bufferedImage, param);
			out.flush();
			out.flush();
		} catch (IOException e) {
			e.printStackTrace();
		}
		System.err.println("Have saved " + component.getName() + " to file "
				+ file);
	}

	// 保存图片
	public void saveFrom() {
		File file = new File("C:\\1_b.jpg");
		JPanel panel = new JPanel();
		panel.setLayout(new java.awt.GridLayout(0, 1));
		panel.setBackground(Color.WHITE);
		panel.add(board);
		scrollPane = new JScrollPane(panel);
		scrollPane.setPreferredSize(new java.awt.Dimension(600, 500));
		setBackground(Color.WHITE);
		getContentPane().add(scrollPane, BorderLayout.CENTER);
		pack();
		setVisible(true);
		saveComponentAsJPEG(scrollPane.getViewport().getView(), file);
		getContentPane().remove(scrollPane);
	}

	// 打开图片
	public void readFrom() {
		getContentPane().add(board, BorderLayout.CENTER);
		board.setImagePath("C:\\1.jpg");
		board.setPreferredSize(new Dimension(board.getImgWidth(), board.getImgHeight()));
		getContentPane().add(board, java.awt.BorderLayout.CENTER);
		pack();
		setVisible(true);
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		java.util.Locale.setDefault(java.util.Locale.US);
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				AppFrame appFrame = new AppFrame();
				appFrame.setVisible(true);
				appFrame.getContentPane().setBackground(Color.WHITE);
			}
		});
	}
	
	
}

class ZPanel extends javax.swing.JPanel {   
 
private static final long serialVersionUID = 1L;   
    private Image image;   
    private int imgWidth;   
    private int imgHeight;   
  
    public int getImgWidth() {   
        return imgWidth;   
    }   
  
    public void setImgWidth(int imgWidth) {   
        this.imgWidth = imgWidth;   
    }   
  
    public int getImgHeight() {   
        return imgHeight;   
    }   
  
    public void setImgHeight(int imgHeight) {   
        this.imgHeight = imgHeight;   
    }   
  
    public ZPanel() {   
    }   
  
    public void setImagePath(String imgPath) {   
        // 该方法不推荐使用，该方法是懒加载，图像并不加载到内存，当拿图像的宽和高时会返回-1；   
        // image = Toolkit.getDefaultToolkit().getImage(imgPath);   
        try {   
            // 该方法会将图像加载到内存，从而拿到图像的详细信息。   
            image = ImageIO.read(new FileInputStream(imgPath));   
        } catch (FileNotFoundException e) {   
            e.printStackTrace();   
        } catch (IOException e) {   
            e.printStackTrace();   
        }   
        setImgWidth(image.getWidth(this));   
        setImgHeight(image.getHeight(this));   
    }   
  
    @Override  
    public void paintComponent(Graphics g1) {   
        int x = 0;   
        int y = 0;   
        Graphics g = (Graphics) g1;   
        if (null == image) {   
            return;   
        }   
  
        g.drawImage(image, x, y, image.getWidth(this), image.getHeight(this),   
                this);   
        g = null;   
    }   
}


